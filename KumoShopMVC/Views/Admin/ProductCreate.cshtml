@using KumoShopMVC.Data
@model KumoShopMVC.ViewModels.ProductVM
@{
    ViewData["Title"] = "CreateProduct";
}

<h1>CreateProduct</h1>

<div class="page-content">
    <div class="container-xxl">
        <form id="create-product-form" method="post" asp-action="ProductCreate" asp-controller="Admin" enctype="multipart/form-data">

            <!-- Product Name -->
            <div class="row">
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label for="product-name" class="form-label">Product Name</label>
                        <input type="text" id="product-name" class="form-control" placeholder="Items Name" name="NameProduct" required />
                    </div>
                </div>
                <!-- Product Categories -->
                <div class="col-lg-6">
                    <div class="mb-3">
                        <label for="product-categories" class="form-label">Product Categories</label>
                        <select class="form-control" id="CategoryId" name="CategoryId" asp-for="CategoryId" asp-items="ViewBag.Categories" required>
                        </select>
                    </div>
                </div>
            </div>
            <!-- Brand, Price, Gender -->
            <div class="row">
                <div class="col-lg-4">
                    <div class="mb-3">
                        <label for="product-brand" class="form-label">Brand</label>
                        <input type="text" id="product-brand" class="form-control" placeholder="Brand Name" name="Brand" required />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="mb-3">
                        <label for="product-price" class="form-label">Price</label>
                        <div class="input-group">
                            <span class="input-group-text fs-20"><i class='bx bx-dollar'></i></span>
                            <input type="number" id="product-price" class="form-control" placeholder="000" name="Price" required />
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="mb-3">
                        <label for="gender" class="form-label">Gender</label>
                        <select class="form-control" id="gender" name="Gender" required>
                            <option value="">Select Gender</option>
                            <option value="True">Men</option>
                            <option value="False">Women</option>
                            <option value="null">Other</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Size -->
                <div class="col-lg-4">
                    <div class="mt-3">
                        <h5 class="text-dark fw-medium">Size:</h5>
                        <div class="d-flex flex-wrap gap-2" role="group" aria-label="Size Selection">
                            @foreach (var size in ViewBag.Sizes as List<Size>)
                            {
                                <input type="checkbox" class="btn-check" id="size-@size.SizeId" name="Sizes" value="@size.SizeId">
                                <label class="btn btn-light avatar-sm rounded" for="size-@size.SizeId">@size.SizeNumber</label>
                            }
                        </div>
                    </div>
                </div>

                <!-- Colors -->
                <div class="col-lg-5">
                    <div class="mt-3">
                        <h5 class="text-dark fw-medium">Colors:</h5>
                        <div class="d-flex flex-wrap gap-2" role="group" aria-label="Color Selection">
                            @foreach (var color in ViewBag.Colors as List<Color>)
                            {
                                <input type="checkbox" class="btn-check" id="color-@color.ColorId" name="Colors" value="@color.ColorId">
                                <label class="btn btn-light avatar-sm rounded" for="color-@color.ColorId">
                                    <i class="bx bxs-circle fs-18" style="color: @color.ColorName;"></i>
                                </label>
                            }

                        </div>
                    </div>
                </div>
            </div>

            <!-- Description -->
            <div class="row">
                <div class="col-lg-12">
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control bg-light-subtle" id="description" name="DescProduct" rows="7" placeholder="Short description about the product"></textarea>
                    </div>
                </div>
            </div>
            <label for="Images">Choose Image:</label>
            <input type="file" name="Images" /><br />
            <input type="file" name="Images" /><br />
            <input type="file" name="Images" /><br />
            <input type="file" name="Images" /><br />
            <!-- Submit Button -->
            <div class="row">
                <div class="col-lg-12">
                    <button type="submit" class="btn btn-primary">Create Product</button>
                </div>
            </div>
        </form>

    </div>
    <!-- End Container Fluid -->

    <footer class="footer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 text-center">
                    <script>document.write(new Date().getFullYear())</script> &copy; Larkon. Crafted by <iconify-icon icon="iconamoon:heart-duotone" class="fs-18 align-middle text-danger"></iconify-icon> <a href="#" class="fw-bold footer-text" target="_blank">Techzaa</a>
                </div>
            </div>
        </div>
    </footer>
</div>

<script>
    function validateForm() {
        const productName = document.getElementById("product-name").value.trim();

        if (!productName) {
            alert("Product name cannot be empty. Please enter a product name.");
            return false;
        }
        return true;
    }
</script>
