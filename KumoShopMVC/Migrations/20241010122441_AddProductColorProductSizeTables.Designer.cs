// <auto-generated />
using System;
using KumoShopMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KumoShopMVC.Migrations
{
    [DbContext(typeof(KumoShopContext))]
    [Migration("20241010122441_AddProductColorProductSizeTables")]
    partial class AddProductColorProductSizeTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KumoShopMVC.Data.CardItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CartQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CartItemId")
                        .HasName("PK_Card_item");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CardItem", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDiscount")
                        .HasColumnType("float");

                    b.Property<int?>("TotalItem")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("Color", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescContact")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContactId")
                        .HasName("PK_Feedback");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Favourite", b =>
                {
                    b.Property<int>("FavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavouriteId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescFavourite")
                        .HasColumnType("ntext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FavouriteId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourite", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId")
                        .HasName("PK_invoices");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescOrder")
                        .HasColumnType("ntext");

                    b.Property<double?>("OrderTotal")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK_orders");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KumoShopMVC.Data.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int?>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<double?>("Subtotal")
                        .HasColumnType("float");

                    b.HasKey("OrderItemId")
                        .HasName("PK_order_item");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.PaymentInformation", b =>
                {
                    b.Property<int>("PaymentInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentInfoId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NamePayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentInfoId")
                        .HasName("PK_payment_method");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentInformation", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("CardHolder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cvv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CVV");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NamePaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("PaymentMethodId")
                        .HasName("PK_Payment_method_1");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brands")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescProduct")
                        .HasColumnType("ntext");

                    b.Property<string>("Discount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameProduct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KumoShopMVC.Data.ProductColor", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductColor", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.RatingProduct", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescRating")
                        .HasColumnType("ntext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("RatePoint")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK_Rating_product");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingProduct", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK_roles");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KumoShopMVC.Data.ShippingAddress", b =>
                {
                    b.Property<int>("ShippingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingAddressId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescShipping")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShippingAddressId")
                        .HasName("PK_Shipping_address");

                    b.HasIndex("UserId");

                    b.ToTable("ShippingAddress", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("SizeNumber")
                        .HasColumnType("int");

                    b.HasKey("SizeId");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.StatusShipping", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("DescShipping")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("StatusShipping", (string)null);
                });

            modelBuilder.Entity("KumoShopMVC.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RandomKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("UserId")
                        .HasName("PK_users");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KumoShopMVC.Data.CardItem", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Cart", "Cart")
                        .WithMany("CardItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK_Card_item_Cart");

                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("CardItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Card_item_Products");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Cart", b =>
                {
                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Color", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Product", null)
                        .WithMany("Colors")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Favourite", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("Favourites")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Favourite_Products");

                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Favourite_Users");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Invoice", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_invoices_Orders");

                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_invoices_Users");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Order", b =>
                {
                    b.HasOne("KumoShopMVC.Data.StatusShipping", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_StatusShipping");

                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Users");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.OrderItem", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_item_Orders");

                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_item_Products");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KumoShopMVC.Data.PaymentInformation", b =>
                {
                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("PaymentInformations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Payment_information_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.PaymentMethod", b =>
                {
                    b.HasOne("KumoShopMVC.Data.PaymentInformation", "Payment")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("PaymentId")
                        .IsRequired()
                        .HasConstraintName("FK_Payment_method_Payment_information");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Product", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Categories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("KumoShopMVC.Data.ProductColor", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductColor_Color");

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KumoShopMVC.Data.ProductSize", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductSize_Size");

                    b.HasOne("KumoShopMVC.Data.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("KumoShopMVC.Data.RatingProduct", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Product", "Product")
                        .WithMany("RatingProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Rating_product_Products");

                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("RatingProducts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Rating_product_Users");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.ShippingAddress", b =>
                {
                    b.HasOne("KumoShopMVC.Data.User", "User")
                        .WithMany("ShippingAddresses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Shipping_address_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KumoShopMVC.Data.User", b =>
                {
                    b.HasOne("KumoShopMVC.Data.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Cart", b =>
                {
                    b.Navigation("CardItems");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("KumoShopMVC.Data.PaymentInformation", b =>
                {
                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Product", b =>
                {
                    b.Navigation("CardItems");

                    b.Navigation("Colors");

                    b.Navigation("Favourites");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductColors");

                    b.Navigation("ProductSizes");

                    b.Navigation("RatingProducts");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("KumoShopMVC.Data.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("KumoShopMVC.Data.StatusShipping", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("KumoShopMVC.Data.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Favourites");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("PaymentInformations");

                    b.Navigation("RatingProducts");

                    b.Navigation("ShippingAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
